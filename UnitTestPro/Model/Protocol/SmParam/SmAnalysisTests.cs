using Microsoft.VisualStudio.TestTools.UnitTesting;
using YCsharp.Model.Procotol.SmParam;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using YCsharp.Model.Buffers;
using YCsharp.Service;

namespace YCsharp.Model.Procotol.SmParam.Tests {
    [TestClass()]
    public class SmAnalysisTests {
        [TestMethod()]
        public void ThroughAnalysisStackTest() {
            //Assert.Fail();
            var dynamicBuffer = new YDynamicBuffer(1024);
            var buffer = new byte[] {
                0x68,0x31,0x30,0x30,0x31,0x37,0x39,0x30,0x31,0x69,0x02,0x66,0x03,0x4E,0x08,0x01,0xF4,0x0A,0x01,0xD0,0x98,0x3E,0xDE,0x08,0x01,0xF5,0x0A,0x01,0x2F,0x68,0x3D,0xE1,0x08,0x01,0xF6,0x0A,0x01,0x8E,0x39,0x3C,0xE3,0x08,0x01,0xF7,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x01,0xF8,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x01,0xF9,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x01,0xFA,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x01,0xFB,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x01,0xFC,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x01,0xFD,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x01,0xFE,0x0A,0x01,0x99,0x9A,0x41,0xF1,0x08,0x01,0xFF,0x0A,0x01,0x00,0x00,0x42,0x54,0x08,0x02,0x00,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x01,0x0A,0x01,0x00,0x00,0x42,0x54,0x08,0x02,0x02,0x0A,0x01,0x00,0x00,0x41,0x40,0x08,0x02,0x03,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x04,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x05,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x06,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x07,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x08,0x0A,0x01,0x00,0x00,0x43,0xC8,0x08,0x02,0x09,0x0A,0x01,0x55,0x55,0x43,0xAD,0x08,0x02,0x0A,0x0A,0x01,0xC2,0x8F,0x3C,0x75,0x08,0x02,0x0B,0x0A,0x01,0x00,0x00,0x40,0x80,0x08,0x02,0x0C,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x0D,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x0E,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x0F,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x10,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x11,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x12,0x0A,0x01,0x0F,0xF0,0x49,0x74,0x08,0x02,0x13,0x0A,0x01,0x16,0xF0,0x49,0x74,0x08,0x02,0x14,0x0A,0x01,0x23,0xF0,0x49,0x74,0x08,0x02,0x15,0x0A,0x01,0xB9,0x1A,0x46,0x1E,0x08,0x02,0x16,0x0A,0x01,0x23,0xF0,0x49,0x74,0x08,0x02,0x17,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x18,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x19,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x1A,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x1B,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x1C,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x1D,0x0A,0x01,0x14,0x7B,0x41,0x02,0x08,0x02,0x1E,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x1F,0x0A,0x01,0x00,0x00,0x00,0x00,0x08,0x02,0x20,0x0A,0x01,0x00,0x00,0x00,0x00,0x06,0x02,0x21,0x0A,0x00,0x00,0x00,0x06,0x02,0x22,0x0A,0x00,0x02,0x49,0x06,0x02,0x23,0x0A,0x00,0x02,0x00,0x06,0x02,0x24,0x01,0x01,0x00,0x5A,0x06,0x02,0x25,0x01,0x01,0x00,0x61,0x06,0x02,0x26,0x01,0x01,0x00,0x3A,0x06,0x02,0x27,0x01,0x01,0x00,0x3F,0x06,0x02,0x28,0x01,0x01,0x00,0x54,0x06,0x02,0x29,0x01,0x01,0x00,0x6B,0x06,0x02,0x2A,0x01,0x01,0x00,0x93,0x06,0x02,0x2B,0x01,0x01,0x00,0x46,0x06,0x02,0x2C,0x01,0x01,0x00,0x00,0x06,0x02,0x2D,0x01,0x01,0x00,0x00,0x06,0x02,0x2E,0x01,0x01,0x00,0x00,0x06,0x02,0x2F,0x01,0x01,0x00,0x00,0x06,0x02,0x30,0x01,0x01,0x00,0x00,0x06,0x02,0x31,0x01,0x01,0x00,0x00,0x06,0x02,0x32,0x01,0x01,0x00,0x00,0x06,0x02,0x33,0x01,0x01,0x00,0x00,0x06,0x02,0x34,0x01,0x01,0x00,0x00,0x06,0x02,0x35,0x01,0x01,0x00,0xFA,0x06,0x02,0x36,0x01,0x01,0x00,0x00,0x06,0x02,0x37,0x01,0x01,0x00,0x00,0x06,0x02,0x38,0x01,0x01,0x04,0xE4,0x06,0x02,0x39,0x01,0x01,0x05,0x3A,0x06,0x02,0x3A,0x01,0x01,0x05,0xB8,0x06,0x02,0x3B,0x01,0x01,0x05,0xE7,0x06,0x02,0x3C,0x01,0x01,0x05,0xDF,0x06,0x02,0x3D,0x01,0x01,0x06,0x3F,0x06,0x02,0x3E,0x01,0x01,0x06,0x21,0x06,0x02,0x3F,0x01,0x01,0x05,0xEA,0x06,0x02,0x40,0x01,0x01,0x00,0x00,0x06,0x02,0x41,0x01,0x01,0x00,0x00,0x06,0x02,0x42,0x01,0x01,0x01,0x37,0x06,0x02,0x43,0x01,0x01,0x01,0x39,0x06,0x02,0x44,0x01,0x01,0x01,0x38,0x06,0x02,0x45,0x01,0x01,0x01,0x5B,0x06,0x02,0x46,0x01,0x01,0x01,0x2A,0x06,0x02,0x47,0x01,0x01,0x01,0x3E,0x06,0x02,0x48,0x01,0x01,0x01,0x52,0x06,0x02,0x49,0x01,0x01,0x00,0x00,0x06,0x02,0x4A,0x01,0x01,0x00,0x00,0x06,0x02,0x4B,0x01,0x01,0x00,0x00,0x06,0x02,0x4C,0x01,0x01,0x00,0x00,0x06,0x02,0x4D,0x01,0x01,0x00,0x00,0x06,0x02,0x4E,0x01,0x01,0x00,0x00,0x06,0x02,0x4F,0x01,0x01,0x00,0x00,0x06,0x02,0x50,0x01,0x01,0x00,0x00,0x06,0x02,0x51,0x01,0x01,0x00,0x00,0x06,0x02,0x52,0x01,0x01,0x00,0x00,0x06,0x02,0x53,0x01,0x01,0x00,0x00,0x06,0x02,0x54,0x01,0x01,0x00,0x00,0x06,0x02,0x55,0x01,0x01,0x00,0x00,0x06,0x02,0x56,0x01,0x01,0x04,0xE2,0x06,0x02,0x57,0x01,0x01,0x05,0x46,0x06,0x02,0x58,0x01,0x01,0x05,0xAA,0x06,0x02,0x59,0x01,0x01,0x05,0xDC,0x06,0x02,0x5A,0x01,0x01,0x05,0xDC,0x06,0x02,0x5B,0x01,0x01,0x06,0x40,0x06,0x02,0x5C,0x01,0x01,0x06,0x40,0x06,0x02,0x5D,0x01,0x01,0x06,0x18,0x06,0x02,0x5E,0x01,0x01,0x00,0x00,0x06,0x02,0x5F,0x01,0x01,0x00,0x00,0x8E,0x39,0x0D
            };
            var analysis = new SmAnalysis(dynamicBuffer, new LoggerService("C:\\HmiPro\\Log"));
            var models = analysis.ThroughAnalysisStack(buffer, 0, buffer.Length);
            int l = 0;
            foreach (var model in models) {
                model.SmParams.ForEach(sm => {
                    //Console.WriteLine(sm.GetSignalData());
                    try {
                        ++l;
                        sm.GetSignalData();
                    } catch (Exception e) {
                        Console.WriteLine("错误数据：" + sm.GetDataHexStr());
                        Console.WriteLine("错误参数：" + sm.ParamCode);
                    }

                });
            }
            //var str =

            //StringBuilder builder = new StringBuilder();
            //string tmp = "";
            //for (int i = 0; i < str.Length; i++) {
            //    if (i % 2 == 0) {
            //        builder.Append(tmp);
            //        tmp = "0x" + str[i];
            //    } else {
            //        tmp += str[i];
            //        if (i != 0 && i != str.Length - 1) {
            //            tmp += ",";
            //        }
            //    }
            //}
            //builder.Append(tmp);
            //Console.WriteLine(builder);
        }
    }
}